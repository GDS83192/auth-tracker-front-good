{"ast":null,"code":"import _defineProperty from \"/Users/grahamsquires/sei/AuthProj4/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_EXPENSES, ADD_EXPENSE, DELETE_EXPENSE, SET_CURRENT, CLEAR_CURRENT, UPDATE_EXPENSE, FILTER_EXPENSES, CLEAR_FILTER, EXPENSE_ERROR, SORT_EXPENSES, SET_ORDER, SET_SORT, CLEAR_EXPENSES } from \"../types\";\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_EXPENSES:\n      return _objectSpread({}, state, {\n        expenses: action.payload,\n        loading: false\n      });\n\n    case ADD_EXPENSE:\n      return _objectSpread({}, state, {\n        expenses: [...state.expenses, action.payload],\n        loading: false\n      });\n\n    case UPDATE_EXPENSE:\n      return _objectSpread({}, state, {\n        expenses: state.expenses.map(expense => expense._id === action.payload._id ? action.payload : expense),\n        loading: false\n      });\n\n    case DELETE_EXPENSE:\n      return _objectSpread({}, state, {\n        expenses: state.expenses.filter(expense => expense._id !== action.payload),\n        loading: false\n      });\n\n    case CLEAR_EXPENSES:\n      return _objectSpread({}, state, {\n        expenses: null,\n        filtered: null,\n        error: null,\n        current: null\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case FILTER_EXPENSES:\n      return _objectSpread({}, state, {\n        filtered: state.expenses.filter(expense => {\n          const regex = new RegExp(\"\".concat(action.payload), \"gi\");\n          return expense.category.match(regex) || expense.description.match(regex);\n        })\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        filtered: null\n      });\n\n    case SET_ORDER:\n      return _objectSpread({}, state, {\n        order: action.payload\n      });\n\n    case SET_SORT:\n      return _objectSpread({}, state, {\n        sortBy: action.payload\n      });\n\n    case SORT_EXPENSES:\n      return _objectSpread({}, state, {\n        expenses: state.expenses.sort((a, b) => {\n          switch (state.sortBy) {\n            case \"Date\":\n              if (state.order === \"asc\") {\n                return new Date(a.date) - new Date(b.date);\n              } else {\n                return new Date(b.date) - new Date(a.date);\n              }\n\n            case \"Amount\":\n              if (state.order === \"asc\") {\n                return a.amount - b.amount;\n              } else {\n                return b.amount - a.amount;\n              }\n\n            case \"Category\":\n              if (state.order === \"asc\") {\n                return a.category > b.category ? 1 : -1;\n              } else {\n                return a.category > b.category ? -1 : 1;\n              }\n\n            default:\n              return state;\n          }\n        })\n      });\n\n    case EXPENSE_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/grahamsquires/sei/AuthProj4/client/src/context/expense/expenseReducer.js"],"names":["GET_EXPENSES","ADD_EXPENSE","DELETE_EXPENSE","SET_CURRENT","CLEAR_CURRENT","UPDATE_EXPENSE","FILTER_EXPENSES","CLEAR_FILTER","EXPENSE_ERROR","SORT_EXPENSES","SET_ORDER","SET_SORT","CLEAR_EXPENSES","state","action","type","expenses","payload","loading","map","expense","_id","filter","filtered","error","current","regex","RegExp","category","match","description","order","sortBy","sort","a","b","Date","date","amount"],"mappings":"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","sourcesContent":["import {\n  GET_EXPENSES,\n  ADD_EXPENSE,\n  DELETE_EXPENSE,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_EXPENSE,\n  FILTER_EXPENSES,\n  CLEAR_FILTER,\n  EXPENSE_ERROR,\n  SORT_EXPENSES,\n  SET_ORDER,\n  SET_SORT,\n  CLEAR_EXPENSES\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_EXPENSES:\n      return {\n        ...state,\n        expenses: action.payload,\n        loading: false\n      };\n    case ADD_EXPENSE:\n      return {\n        ...state,\n        expenses: [...state.expenses, action.payload],\n        loading: false\n      };\n    case UPDATE_EXPENSE:\n      return {\n        ...state,\n        expenses: state.expenses.map(expense =>\n          expense._id === action.payload._id ? action.payload : expense\n        ),\n        loading: false\n      };\n    case DELETE_EXPENSE:\n      return {\n        ...state,\n        expenses: state.expenses.filter(\n          expense => expense._id !== action.payload\n        ),\n        loading: false\n      };\n    case CLEAR_EXPENSES:\n      return {\n        ...state,\n        expenses: null,\n        filtered: null,\n        error: null,\n        current: null\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      };\n    case FILTER_EXPENSES:\n      return {\n        ...state,\n        filtered: state.expenses.filter(expense => {\n          const regex = new RegExp(`${action.payload}`, \"gi\");\n          return (\n            expense.category.match(regex) || expense.description.match(regex)\n          );\n        })\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null\n      };\n    case SET_ORDER:\n      return {\n        ...state,\n        order: action.payload\n      };\n    case SET_SORT:\n      return {\n        ...state,\n        sortBy: action.payload\n      };\n    case SORT_EXPENSES:\n      return {\n        ...state,\n        expenses: state.expenses.sort((a, b) => {\n          switch (state.sortBy) {\n            case \"Date\":\n              if (state.order === \"asc\") {\n                return new Date(a.date) - new Date(b.date);\n              } else {\n                return new Date(b.date) - new Date(a.date);\n              }\n\n            case \"Amount\":\n              if (state.order === \"asc\") {\n                return a.amount - b.amount;\n              } else {\n                return b.amount - a.amount;\n              }\n\n            case \"Category\":\n              if (state.order === \"asc\") {\n                return a.category > b.category ? 1 : -1;\n              } else {\n                return a.category > b.category ? -1 : 1;\n              }\n\n            default:\n              return state;\n          }\n        })\n      };\n    case EXPENSE_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}