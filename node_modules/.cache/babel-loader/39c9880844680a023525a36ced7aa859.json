{"ast":null,"code":"import _slicedToArray from \"/Users/grahamsquires/sei/AuthProj4/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/grahamsquires/sei/AuthProj4/client/src/context/expense/ExpenseState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ExpenseContext from \"./expenseContext\";\nimport expenseReducer from \"./expenseReducer\";\nimport { GET_EXPENSES, ADD_EXPENSE, DELETE_EXPENSE, SET_CURRENT, CLEAR_CURRENT, UPDATE_EXPENSE, FILTER_EXPENSES, CLEAR_EXPENSES, CLEAR_FILTER, SORT_EXPENSES, SET_ORDER, SET_SORT, EXPENSE_ERROR } from \"../types\";\n\nconst ExpenseState = props => {\n  const initialState = {\n    expenses: null,\n    current: null,\n    filtered: null,\n    order: \"asc\",\n    sortBy: \"Date\",\n    error: null\n  };\n\n  const _useReducer = useReducer(expenseReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Get Expenses\n\n\n  const getExpenses = async () => {\n    try {\n      const res = await axios.get(\"/api/expenses\");\n      dispatch({\n        type: GET_EXPENSES,\n        payload: res.data\n      });\n      sortExpenses();\n    } catch (err) {\n      dispatch({\n        type: EXPENSE_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Add Expense\n\n\n  const addExpense = async expense => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/expenses\", expense, config);\n      dispatch({\n        type: ADD_EXPENSE,\n        payload: res.data\n      });\n      sortExpenses();\n    } catch (err) {\n      dispatch({\n        type: EXPENSE_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Delete Expense\n\n\n  const deleteExpense = async id => {\n    try {\n      await axios.delete(\"/api/expenses/\".concat(id));\n      dispatch({\n        type: DELETE_EXPENSE,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: EXPENSE_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Update Expense\n\n\n  const updateExpense = async expense => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.put(\"/api/expenses/\".concat(expense._id), expense, config);\n      dispatch({\n        type: UPDATE_EXPENSE,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: EXPENSE_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Clear Expenses\n\n\n  const clearExpenses = () => {\n    dispatch({\n      type: CLEAR_EXPENSES\n    });\n  }; // Set Current Expense\n\n\n  const setCurrent = expense => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: expense\n    });\n  }; // Clear Current Expense\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Filter Expenses\n\n\n  const filterExpenses = text => {\n    dispatch({\n      type: FILTER_EXPENSES,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  }; // Sort Expenses\n\n\n  const sortExpenses = () => {\n    dispatch({\n      type: SORT_EXPENSES\n    });\n  }; // Set Order\n\n\n  const setOrder = order => {\n    dispatch({\n      type: SET_ORDER,\n      payload: order\n    });\n  }; // Set Sort\n\n\n  const setSort = sortBy => {\n    dispatch({\n      type: SET_SORT,\n      payload: sortBy\n    });\n  };\n\n  return React.createElement(ExpenseContext.Provider, {\n    value: {\n      expenses: state.expenses,\n      current: state.current,\n      filtered: state.filtered,\n      order: state.order,\n      sortBy: state.sortBy,\n      error: state.error,\n      chartData: state.chartData,\n      chartDataLabels: state.chartDataLabels,\n      addExpense,\n      deleteExpense,\n      setCurrent,\n      clearCurrent,\n      updateExpense,\n      filterExpenses,\n      clearFilter,\n      sortExpenses,\n      setOrder,\n      setSort,\n      getExpenses,\n      clearExpenses\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ExpenseState;","map":{"version":3,"sources":["/Users/grahamsquires/sei/AuthProj4/client/src/context/expense/ExpenseState.js"],"names":["React","useReducer","axios","ExpenseContext","expenseReducer","GET_EXPENSES","ADD_EXPENSE","DELETE_EXPENSE","SET_CURRENT","CLEAR_CURRENT","UPDATE_EXPENSE","FILTER_EXPENSES","CLEAR_EXPENSES","CLEAR_FILTER","SORT_EXPENSES","SET_ORDER","SET_SORT","EXPENSE_ERROR","ExpenseState","props","initialState","expenses","current","filtered","order","sortBy","error","state","dispatch","getExpenses","res","get","type","payload","data","sortExpenses","err","response","msg","addExpense","expense","config","headers","post","deleteExpense","id","delete","updateExpense","put","_id","clearExpenses","setCurrent","clearCurrent","filterExpenses","text","clearFilter","setOrder","setSort","chartData","chartDataLabels","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport ExpenseContext from \"./expenseContext\";\nimport expenseReducer from \"./expenseReducer\";\nimport {\n  GET_EXPENSES,\n  ADD_EXPENSE,\n  DELETE_EXPENSE,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_EXPENSE,\n  FILTER_EXPENSES,\n  CLEAR_EXPENSES,\n  CLEAR_FILTER,\n  SORT_EXPENSES,\n  SET_ORDER,\n  SET_SORT,\n  EXPENSE_ERROR\n} from \"../types\";\n\nconst ExpenseState = props => {\n  const initialState = {\n    expenses: null,\n    current: null,\n    filtered: null,\n    order: \"asc\",\n    sortBy: \"Date\",\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(expenseReducer, initialState);\n\n  // Get Expenses\n  const getExpenses = async () => {\n    try {\n      const res = await axios.get(\"/api/expenses\");\n\n      dispatch({\n        type: GET_EXPENSES,\n        payload: res.data\n      });\n      sortExpenses();\n    } catch (err) {\n      dispatch({\n        type: EXPENSE_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Add Expense\n  const addExpense = async expense => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/expenses\", expense, config);\n\n      dispatch({\n        type: ADD_EXPENSE,\n        payload: res.data\n      });\n      sortExpenses();\n    } catch (err) {\n      dispatch({ type: EXPENSE_ERROR, payload: err.response.msg });\n    }\n  };\n\n  // Delete Expense\n  const deleteExpense = async id => {\n    try {\n      await axios.delete(`/api/expenses/${id}`);\n\n      dispatch({\n        type: DELETE_EXPENSE,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({ type: EXPENSE_ERROR, payload: err.response.msg });\n    }\n  };\n\n  // Update Expense\n  const updateExpense = async expense => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.put(\n        `/api/expenses/${expense._id}`,\n        expense,\n        config\n      );\n\n      dispatch({\n        type: UPDATE_EXPENSE,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: EXPENSE_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  // Clear Expenses\n  const clearExpenses = () => {\n    dispatch({ type: CLEAR_EXPENSES });\n  };\n\n  // Set Current Expense\n  const setCurrent = expense => {\n    dispatch({ type: SET_CURRENT, payload: expense });\n  };\n\n  // Clear Current Expense\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Filter Expenses\n  const filterExpenses = text => {\n    dispatch({ type: FILTER_EXPENSES, payload: text });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  // Sort Expenses\n  const sortExpenses = () => {\n    dispatch({ type: SORT_EXPENSES });\n  };\n\n  // Set Order\n  const setOrder = order => {\n    dispatch({ type: SET_ORDER, payload: order });\n  };\n\n  // Set Sort\n  const setSort = sortBy => {\n    dispatch({ type: SET_SORT, payload: sortBy });\n  };\n\n  return (\n    <ExpenseContext.Provider\n      value={{\n        expenses: state.expenses,\n        current: state.current,\n        filtered: state.filtered,\n        order: state.order,\n        sortBy: state.sortBy,\n        error: state.error,\n        chartData: state.chartData,\n        chartDataLabels: state.chartDataLabels,\n        addExpense,\n        deleteExpense,\n        setCurrent,\n        clearCurrent,\n        updateExpense,\n        filterExpenses,\n        clearFilter,\n        sortExpenses,\n        setOrder,\n        setSort,\n        getExpenses,\n        clearExpenses\n      }}\n    >\n      {props.children}\n    </ExpenseContext.Provider>\n  );\n};\n\nexport default ExpenseState;\n"]},"metadata":{},"sourceType":"module"}